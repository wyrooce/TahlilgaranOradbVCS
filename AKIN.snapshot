{"function":[{"sourceCode":"\n    CREATE \n    OR REPLACE FUNCTION \"AKIN\".\"FNC_CHECK_VALID_DATE\" (     SRCD_GHST_DATE NUMBER)  RETURN date AS   V_OLDDATE_LEN NUMBER ;   v_Newdate     VARCHAR2(20) ; BEGIN   V_OLDDATE_LEN := LENGTH(SRCD_GHST_DATE);   CASE   \n        WHEN V_OLDDATE_LEN=3 THEN     V_NEWDATE      := '14000' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=4 THEN     V_NEWDATE      := '1400' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=5 THEN     V_NEWDATE      := '140' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=6 THEN       CASE   \n            WHEN (\n                SUBSTR(SRCD_GHST_DATE, 1,2) < 60 \n            ) THEN       V_NEWDATE      := '14' || TO_CHAR(SRCD_GHST_DATE) ;   \n            ELSE      V_NEWDATE      := '13' || TO_CHAR(SRCD_GHST_DATE) ;   \n        END CASE ;       \n            ELSE     RETURN null ;   \n        END CASE ;   CASE   \n                WHEN (\n                    SUBSTR((V_NEWDATE), 7,2) BETWEEN 1 AND 32\n                ) \n                AND (\n                    SUBSTR((V_NEWDATE), 5,2) BETWEEN 1 AND 12\n                ) THEN     RETURN to_date( v_NEWDATE,'yy\/mm\/dd','nls_calendar=persian') ;     -- RETURN V_NEWDATE ;   \n                ELSE     RETURN null ;   \n            END CASE ; \n            END ;","name":"FNC_CHECK_VALID_DATE","digestSourceCode":"\n    CREATE \n    OR REPLACE FUNCTION \"AKIN\".\"FNC_CHECK_VALID_DATE\" (     SRCD_GHST_DATE NUMBER)  RETURN date AS   V_OLDDATE_LEN NUMBER ;   v_Newdate     VARCHAR2(20) ; BEGIN   V_OLDDATE_LEN := LENGTH(SRCD_GHST_DATE);   CASE   \n        WHEN V_OLDDATE_LEN=3 THEN     V_NEWDATE      := '14000' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=4 THEN     V_NEWDATE      := '1400' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=5 THEN     V_NEWDATE      := '140' || TO_CHAR(SRCD_GHST_DATE) ;   \n        WHEN V_OLDDATE_LEN=6 THEN       CASE   \n            WHEN (\n                SUBSTR(SRCD_GHST_DATE, 1,2) < 60 \n            ) THEN       V_NEWDATE      := '14' || TO_CHAR(SRCD_GHST_DATE) ;   \n            ELSE      V_NEWDATE      := '13' || TO_CHAR(SRCD_GHST_DATE) ;   \n        END CASE ;       \n            ELSE     RETURN null ;   \n        END CASE ;   CASE   \n                WHEN (\n                    SUBSTR((V_NEWDATE), 7,2) BETWEEN 1 AND 32\n                ) \n                AND (\n                    SUBSTR((V_NEWDATE), 5,2) BETWEEN 1 AND 12\n                ) THEN     RETURN to_date( v_NEWDATE,'yy\/mm\/dd','nls_calendar=persian') ;     -- RETURN V_NEWDATE ;   \n                ELSE     RETURN null ;   \n            END CASE ; \n            END ;"}],"name":"AKIN","procedure":[{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_J_TRANSFER_DEPOSIT\" ( RUN_DATE IN DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel DEPOSIT be sorate tarikhi   *\/  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP;  LOC_MEGHDAR   NUMBER; BEGIN  EXECUTE IMMEDIATE 'truncate table akin.TBL_DEPOSIT';  LOC_S   := SYSTIMESTAMP;  INSERT     \/\n        *+   PARALLEL(auto) *\/ \n    INTO\n        AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,RATE  ,REF_BRANCH  ,REF_CUSTOMER  ,REF_DEPOSIT_ACCOUNTING  ,MODALITY_TYPE  ,REF_CURRENCY  ) (\n            SELECT\n                CASE     \n                    WHEN T.SHOMARE_SEPORDE IS NOT NULL THEN TO_NUMBER(T.SHOMARE_SEPORDE)     \n                    ELSE 999999    \n                END   AS SHOMARE_SEPORDE  ,\n                T.TARIKH_EFTETAH  ,\n                T.MOJUDI_SEPORDE  ,\n                T.TARIKH_SARRESID  ,\n                T.NOE_SEPORDE  ,\n                CASE     \n                    WHEN ( T.NERKH + NVL(B.RATE,\n                    0) ) IS NOT NULL THEN T.NERKH + NVL(B.RATE,\n                    0)     \n                    ELSE 10    \n                END   AS RATE  ,\n                CASE     \n                    WHEN T.BR_CODE IS NOT NULL THEN TO_NUMBER(T.BR_CODE)     \n                    ELSE 99999    \n                END   AS BR_CODE  ,\n                CASE     \n                    WHEN T.CUST_NO IS NOT NULL THEN TO_NUMBER(T.CUST_NO)     \n                    ELSE 99999    \n                END   AS CUST_NO  ,\n                T.NOE_SEPORDE  ,\n                T.TAFKIK_SEPORDE  ,\n                CASE     \n                    WHEN T.ARZ IS NOT NULL THEN T.ARZ     \n                    ELSE 99999    \n                END   AS ARZ  \n            FROM\n                (    SELECT\n                    \/*+   PARALLEL(auto) *\/ DISTINCT     S.DEPNUM AS SHOMARE_SEPORDE    ,\n                    S.OPEN_DATE AS TARIKH_EFTETAH    ,\n                    S.BALANCE_ENDDAY AS MOJUDI_SEPORDE    ,\n                    S.FRZN_AMNT    ,\n                    S.STATE_ENDDAY    ,\n                    ADD_MONTHS(      S.RENEW_DATE     ,\n                    TS.VALIDITY_DURATION     ) AS TARIKH_SARRESID    ,\n                    SUBSTR(      S.PRODUCTTYPECOD     ,\n                    3     ,\n                    4     ) AS NOE_SEPORDE    ,\n                    A.CUR_ID AS ARZ    ,\n                    SS.RATE AS NERKH    ,\n                    SM.CUST_NO + 0 AS CUST_NO    ,\n                    S.BR_CODE + 10000 AS BR_CODE    ,\n                    TS.MODALITY_TYPE AS TAFKIK_SEPORDE    ,\n                    TS.VALIDITY_DURATION AS MODAT    \n                FROM\n                    ARCHIVE_RAW_BANK_DATA.SEPORDE_SOOD@AKIN_TO_ARCHIVE SS     \n                LEFT OUTER JOIN\n                    ARCHIVE_RAW_BANK_DATA.DEPOSIT@AKIN_TO_ARCHIVE S \n                        ON SUBSTR(       S.PRODUCTTYPECOD      ,\n                    3      ,\n                    4      ) = SUBSTR(       SS.DEPTYPECODE      ,\n                    3      ,\n                    4      )     \n                    AND      S.EFFDATE    = TRUNC(RUN_DATE)     \n                    AND      SS.EFFDATE   = TRUNC(RUN_DATE)     \n                LEFT OUTER JOIN\n                    PRAGG.TBL_CURRENCY A \n                        ON S.CURR_COD   = A.SWIFT_CODE     \n                LEFT OUTER JOIN\n                    ARCHIVE_RAW_BANK_DATA.SEPORDE_MOSHTARI@AKIN_TO_ARCHIVE SM \n                        ON SM.DP_NO   = S.DEPNUM     \n                LEFT OUTER JOIN\n                    TBL_MODALITY_TYPE TS \n                        ON TS.ID   = SUBSTR(      S.PRODUCTTYPECOD     ,\n                    3     ,\n                    4     )    \n                WHERE\n                    S.PRODUCTTYPECOD IS NOT NULL     \n                    AND      S.BALANCE_ENDDAY > 0     \n                    AND      SM.EFFDATE   = TRUNC(RUN_DATE)   ) T   \n            LEFT OUTER JOIN\n                (\n                    SELECT\n                        DISTINCT     DP_NO    ,\n                        FIRST_VALUE(      RATE     ) OVER(PARTITION \n                    BY\n                        DP_NO      \n                    ORDER BY\n                        BEGIN_DATE      DESC     ) AS RATE    \n                    FROM\n                        ARCHIVE_RAW_BANK_DATA.SEPORDE_SOOD_TAVAFOGHI@AKIN_TO_ARCHIVE    \n                    WHERE\n                        BEGIN_DATE < TRUNC(RUN_DATE)     \n                        AND      EFFDATE   = TRUNC(RUN_DATE)   \n                ) B \n                    ON T.SHOMARE_SEPORDE   = B.DP_NO  \n                );   COMMIT;  INSERT     \/\n                    *+   PARALLEL(auto) *\/ \n            INTO\n                AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,REF_CURRENCY  ,RATE  ,REF_CUSTOMER  ,MODALITY_TYPE  ,REF_BRANCH  ,REF_DEPOSIT_ACCOUNTING  ) (\n                    SELECT\n                        DISTINCT   T.DEPNUM  ,\n                        MAX(T.OPEN_DATE)  ,\n                        MAX(T.BALANCE_ENDDAY)  ,\n                        MAX(ADD_MONTHS(    T.RENEW_DATE   ,\n                        TS.VALIDITY_DURATION   ) )  ,\n                        MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                        3   ,\n                        4   ) )  ,\n                        CASE    \n                            WHEN MAX(A.CUR_ID) IS NOT NULL THEN MAX(A.CUR_ID)    \n                            ELSE 99999   \n                        END  ,\n                        MAX(    CASE     \n                            WHEN T.BALANCE_ENDDAY >= T.PELE_BASEAMOUNT THEN T.RATE     \n                            ELSE 0    \n                        END   )  ,\n                        CASE    \n                            WHEN MAX(SM.CUST_NO) IS NOT NULL THEN MAX(SM.CUST_NO) + 0    \n                            ELSE 99999   \n                        END  ,\n                        MAX(TS.MODALITY_TYPE)  ,\n                        CASE     \n                            WHEN MAX(T.BR_CODE) IS NOT NULL THEN TO_NUMBER(MAX(T.BR_CODE) )     \n                            ELSE 99999    \n                        END   AS BR_CODE  ,\n                        MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                        3   ,\n                        4   ) )  \n                    FROM\n                        (    SELECT\n                            SP.*    ,\n                            S.DEPOSITKEY    ,\n                            S.DEPNUM    ,\n                            S.BR_CODE + 10000 AS BR_CODE    ,\n                            S.BR_NAME    ,\n                            S.PRODUCTTYPECOD    ,\n                            S.BALANCE_ENDDAY    ,\n                            S.RENEW_DATE    ,\n                            S.CURR_COD    ,\n                            S.CURRENT_STATE    ,\n                            S.FRZN_AMNT    ,\n                            S.EFFDATE AS EFFFDATE    ,\n                            S.STATE_ENDDAY    ,\n                            S.OPEN_DATE    \n                        FROM\n                            ARCHIVE_RAW_BANK_DATA.SEPORDE_SOOD_PELEKANI@AKIN_TO_ARCHIVE SP     \n                        LEFT OUTER JOIN\n                            ARCHIVE_RAW_BANK_DATA.DEPOSIT@AKIN_TO_ARCHIVE S \n                                ON SUBSTR(      S.PRODUCTTYPECOD     ,\n                            3     ,\n                            4     ) = SUBSTR(      SP.DP_TYPE_CODE     ,\n                            3     ,\n                            4     )    \n                        WHERE\n                            S.BALANCE_ENDDAY >= SP.PELE_BASEAMOUNT     \n                            AND      S.BALANCE_ENDDAY > 0     \n                            AND      S.EFFDATE    = TRUNC(RUN_DATE)     \n                            AND      SP.EFFDATE   = TRUNC(RUN_DATE)   ) T   \n                    LEFT OUTER JOIN\n                        PRAGG.TBL_CURRENCY A \n                            ON T.CURR_COD   = A.SWIFT_CODE   \n                    LEFT OUTER JOIN\n                        ARCHIVE_RAW_BANK_DATA.SEPORDE_MOSHTARI@AKIN_TO_ARCHIVE SM \n                            ON SM.DP_NO   = T.DEPNUM   \n                    LEFT OUTER JOIN\n                        TBL_MODALITY_TYPE TS \n                            ON TS.ID        = SUBSTR(     T.PRODUCTTYPECOD    ,\n                        3    ,\n                        4    )   \n                        AND    SM.EFFDATE   = TRUNC(RUN_DATE)  \n                    GROUP BY\n                        T.DEPNUM  );   COMMIT;  INSERT     \/\n                            *+   PARALLEL(auto) *\/ \n                        INTO\n                            AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,REF_CURRENCY  ,RATE  ,REF_CUSTOMER  ,MODALITY_TYPE  ,REF_BRANCH  ,REF_DEPOSIT_ACCOUNTING  ) (\n                                SELECT\n                                    DISTINCT   T.DEPNUM  ,\n                                    MAX(T.OPEN_DATE)  ,\n                                    ROUND(    MAX(T.BALANCE_ENDDAY)   ,\n                                    0   )  ,\n                                    MAX(ADD_MONTHS(    T.RENEW_DATE   ,\n                                    TS.VALIDITY_DURATION   ) )  ,\n                                    MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                                    3   ,\n                                    4   ) )  ,\n                                    CASE    \n                                        WHEN MAX(A.CUR_ID) IS NOT NULL THEN MAX(A.CUR_ID)    \n                                        ELSE 99999   \n                                    END  ,\n                                    MAX(0)  ,\n                                    CASE    \n                                        WHEN MAX(SM.CUST_NO) IS NOT NULL THEN MAX(SM.CUST_NO) + 0    \n                                        ELSE 99999   \n                                    END  ,\n                                    MAX(TS.MODALITY_TYPE)  ,\n                                    CASE     \n                                        WHEN MAX(T.BR_CODE) IS NOT NULL THEN MAX(T.BR_CODE) + 10000     \n                                        ELSE 99999    \n                                    END   AS BR_CODE  ,\n                                    MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                                    3   ,\n                                    4   ) )  \n                                FROM\n                                    ARCHIVE_RAW_BANK_DATA.DEPOSIT@AKIN_TO_ARCHIVE T   \n                                LEFT OUTER JOIN\n                                    PRAGG.TBL_CURRENCY A \n                                        ON T.CURR_COD   = A.SWIFT_CODE   \n                                LEFT OUTER JOIN\n                                    ARCHIVE_RAW_BANK_DATA.SEPORDE_MOSHTARI@AKIN_TO_ARCHIVE SM \n                                        ON SM.DP_NO   = T.DEPNUM   \n                                LEFT OUTER JOIN\n                                    TBL_MODALITY_TYPE TS \n                                        ON TS.ID   = SUBSTR(    T.PRODUCTTYPECOD   ,\n                                    3   ,\n                                    4   )  \n                                WHERE\n                                    TS.MODALITY_TYPE   = 2   \n                                    AND    T.BALANCE_ENDDAY > 0   \n                                    AND    T.EFFDATE          = TRUNC(RUN_DATE)   \n                                    AND    SM.EFFDATE         = TRUNC(RUN_DATE)  \n                                GROUP BY\n                                    T.DEPNUM  \n                            );   COMMIT; \/*  LOC_F := SYSTIMESTAMP;*\/ \/*  SELECT\n                                COUNT(*) \n                            INTO\n                                LOC_MEGHDAR \n                            FROM\n                                NEGASHT.TBL_SEPORDE_EMRUZ;*\/ \/*  HAMI.PRC_LOG('DEP_CNT',\n                                LOC_MEGHDAR,\n                                USER,\n                                $$PLSQL_UNIT,\n                                $$PLSQL_LINE,\n                                NULL);*\/ \/*  HAMI.PRC_LOG('DEP_TIME',\n                                HAMI.FNC_MODAT_EJRA(LOC_S,\n                                LOC_F),\n                                USER,\n                                $$PLSQL_UNIT,\n                                $$PLSQL_LINE,\n                                NULL);*\/ \/*  SELECT\n                                    COUNT(*)-LOC_MEGHDAR \n                                INTO\n                                    LOC_MEGHDAR \n                                FROM\n                                    archive_raw_bank_data.DEPOSIT;*\/ \/*  HAMI.PRC_LOG('DEP_IGN_CNT',\n                                    LOC_MEGHDAR,\n                                    USER,\n                                    $$PLSQL_UNIT,\n                                    $$PLSQL_LINE,\n                                    NULL);*\/ \/*  EXCEPTION *\/ \/*\n                                    WHEN OTHERS THEN*\/ \/*RAISE;*\/ \n                                END PRC_J_TRANSFER_DEPOSIT;","name":"PRC_J_TRANSFER_DEPOSIT","digestSourceCode":"b2fffe38c5cb4e68563a9b0136b635f5e9ed0e5c"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_ACCOUNTING\"  AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/09-10:00   Version:   Category:    Description: enteghal be jadavel hesabdari    *\/     LOC_S  TIMESTAMP;  LOC_F  TIMESTAMP;  LOC_MEGHDAR NUMBER;    BEGIN \/****  az jadval  SEPORDE_DAFTAR_KOL bar asas nahveie ke bank gofte har noe seporde be yek code sarfasl sod va yek code sarfasl asl negasht mishavad ****\/    EXECUTE IMMEDIATE 'truncate table  akin.TBL_DEPOSIT_ACCOUNTING';    LOC_S := SYSTIMESTAMP;   INSERT \n    INTO\n        akin.TBL_DEPOSIT_ACCOUNTING\n        --- hesabdari SEPORDE   (SELECT\n            * \n        FROM\n            (  SELECT\n                substr(dp_type_code,\n                3,\n                4)  as ref_seporde ,\n                to_char(rel_type) AS s,\n                glcode   \n            FROM\n                DADEKAVAN_DAY.seporde_daftar_kol ) pivot  (  sum(glcode)   FOR s   IN ( 'حساب اصلي' AS asl,\n            'حساب سود علي الحساب' AS sud) ) \n        where\n            asl is not null     );        LOC_F := SYSTIMESTAMP;        LOC_MEGHDAR := SQL%ROWCOUNT;        HAMI.PRC_LOG('DEP_ACC_CNT', LOC_MEGHDAR, USER, $$PLSQL_UNIT, $$PLSQL_LINE, NULL);        HAMI.PRC_LOG('DEP_ACC_TIME', HAMI.FNC_MODAT_EJRA(LOC_S, LOC_F), USER, $$PLSQL_UNIT, $$PLSQL_LINE, NULL);    ------------------------------------------------------------------     EXECUTE IMMEDIATE 'truncate table  akin.TBL_LOAN_ACCOUNTING'; \/****  az jadval  TASHILAT_DAFTAR_KOL bar asas nahveie ke bank gofte har noe TASHILAT be yek code sarfasl sod va yek code sarfasl asl negasht mishavad ****\/    LOC_S := SYSTIMESTAMP;   INSERT   \n            INTO\n                akin.TBL_LOAN_ACCOUNTING\n                ---HESABDARI_TASHILAT    (SELECT\n                    * \n                FROM\n                    (   SELECT\n                        substr(DP_TYPE_CODE,\n                        3,\n                        4)  as ref_tashilat ,\n                        to_char(REL_TYPE) AS s,\n                        glcode   \n                    FROM\n                        DADEKAVAN_DAY.tashilat_daftar_kol \n                    where\n                        substr(DP_TYPE_CODE,0,3) ='L33'  ) pivot  (  max(glcode)   FOR s   IN ( 'اصلي' AS asl,\n                    'سود قطعي' AS sud) ) \n                where\n                    asl is not null     )     \n                UNION\n                (\n                    SELECT\n                        * \n                    FROM\n                        ( SELECT\n                            substr(DP_TYPE_CODE,\n                            3,\n                            4)  as ref_tashilat ,\n                            to_char(REL_TYPE) AS s,\n                            glcode   \n                        FROM\n                            DADEKAVAN_DAY.tashilat_daftar_kol \n                        where\n                            substr(DP_TYPE_CODE,0,3) ='L34' ) pivot  ( max(glcode)   FOR s   IN ( 'اصلي' AS asl,\n                        'سود قطعي' AS sud) ) \n                    where\n                        asl is not null  \n                    )  \n                union\n                (\n                    SELECT\n                        * \n                    FROM\n                        ( SELECT\n                            substr(DP_TYPE_CODE,\n                            3,\n                            4)  as ref_tashilat ,\n                            to_char(REL_TYPE) AS s,\n                            glcode   \n                        FROM\n                            DADEKAVAN_DAY.tashilat_daftar_kol \n                        where\n                            substr(DP_TYPE_CODE,0,3) ='L36' ) pivot  ( max(glcode)   FOR s   IN ( 'اصلي' AS asl,\n                        'سود قطعي' AS sud) ) \n                    where\n                        asl is not null  \n                    );  commit;   INSERT   \n                    INTO\n                        akin.TBL_LOAN_ACCOUNTING\n                        (SELECT\n                            ref_tashilat,\n                            asl,\n                            case \n                                when sud is null then sud1 \n                                else sud \n                            end as sud \n                        FROM\n                            (   SELECT\n                                substr(DP_TYPE_CODE,\n                                3,\n                                4)  as ref_tashilat ,\n                                to_char(REL_TYPE) AS s,\n                                glcode   \n                            FROM\n                                DADEKAVAN_DAY.tashilat_daftar_kol \n                            where\n                                substr(DP_TYPE_CODE,0,3) ='L32' -- \n                                or substr(DP_TYPE_CODE,0,3) ='L33'   ) pivot  (  max(glcode)   FOR s   IN ( 'اصلي' AS asl,\n                            'کارمزد' AS sud,\n                            'کارمزد دريافتي' as sud1) ) \n                        where\n                            asl is not null     );           LOC_F := SYSTIMESTAMP;        LOC_MEGHDAR := SQL%ROWCOUNT;        HAMI.PRC_LOG('LOAN_ACC_CNT', LOC_MEGHDAR, USER, $$PLSQL_UNIT, $$PLSQL_LINE, NULL);        HAMI.PRC_LOG('LOAN_ACC_TIME', HAMI.FNC_MODAT_EJRA(LOC_S, LOC_F), USER, $$PLSQL_UNIT, $$PLSQL_LINE, NULL);    EXCEPTION  \n                            WHEN OTHERS THEN RAISE;    \n                        END PRC_TRANSFER_ACCOUNTING;","name":"PRC_TRANSFER_ACCOUNTING","digestSourceCode":"5eced9b05eef0f55af218c455f42b8eb75083774"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_LOAN\" ( RUN_DATE IN DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel loan     *\/  LOC_MEGHDAR   NUMBER;  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP; BEGIN  EXECUTE IMMEDIATE 'truncate table tbl_loan';  LOC_S   := SYSTIMESTAMP;   \/*** bar asas sharayeti bayad tashilat dashte bashand ,tashilat morde taeed bank ra montaghel mikonim ***\/  INSERT     \/\n        *+   PARALLEL(auto) *\/ \n    INTO\n        TBL_LOAN (   LON_ID  ,REF_LOAN_TYPE  ,REF_BRANCH  ,OPENING_DATE  ,APPROVED_AMOUNT  ,REF_CUSTOMER  ,REF_CURRENCY  ,REF_LOAN_ACCOUNTING  ,RATE  ,CURRENT_AMOUNT  ,OVERDUE_AMOUNT  ,DEFERRED_AMOUNT  ,DOUBTFUL_AMOUNT  ) SELECT\n            \/*+   PARALLEL(auto) *\/   L.ABRNCHCOD ||   L.LNMINORTP ||   L.CFCIFNO ||   L.CRSERIAL  ,\n            L.LNMINORTP  ,\n            L.ABRNCHCOD + 10000  ,\n            L.CRBGNDT  ,\n            L.CRACCLIM  ,\n            L.CFCIFNO  ,\n            CASE     \n                WHEN A.CUR_ID IS NOT NULL THEN A.CUR_ID     \n                ELSE 99999    \n            END   AS ID  ,\n            SUBSTR(    L.PRODUCTTYPECODE   ,\n            3   ,\n            4   )  ,\n            L.PRMAINRT  ,\n            L.MANDEH_ASL  ,\n            L.MANDEH_SARRESIDGOZASHTE  ,\n            L.MANDEH_MOAVAGH  ,\n            L.MANDEH_MASHKOOK  \n        FROM\n            DADEKAVAN_DAY.LOAN L   \n        LEFT OUTER JOIN\n            PRAGG.TBL_CURRENCY A \n                ON A.SWIFT_CODE   = L.ACURRCODE  \n        WHERE\n            SUBSTR(     L.PRODUCTTYPECODE    ,0    ,3    ) <> 'L31'   \n            AND    L.EFFDATE   = RUN_DATE   \n            AND    L.STATE_ENDDAY = ANY (\n                '5','4','F','3'    \n            );   COMMIT;    \/***  baraye tashilati ke dar jadval aghsat ghesti nadarand yek ghest ba meghdar sefr vared mikonim  ***\/  INSERT \n            INTO\n                TBL_LOAN_PAYMENT\n                (   REF_LON_ID  ,PAYMENT_NUMBER  ,AMOUNT  ,PROFIT_AMOUNT  ,DUE_DATE  ) SELECT\n                    L.ABRNCHCOD ||   L.LNMINORTP ||   L.CFCIFNO ||   L.CRSERIAL  ,\n                    ''  ,\n                    L.MANDEH_ASL  ,\n                    ROUND(    L.MANDEH_ASL * (     CASE      \n                        WHEN PRMAINRT IS NULL THEN NERKH_KARMOZD      \n                        ELSE PRMAINRT     \n                    END    \/ 100)   ,\n                    0   )  ,\n                    CRENDDT  \n                FROM\n                    DADEKAVAN_DAY.LOAN L  \n                WHERE\n                    L.ABRNCHCOD || L.LNMINORTP || L.CFCIFNO || L.CRSERIAL NOT IN (\n                        SELECT\n                            AKIN.TBL_LOAN_PAYMENT.REF_LON_ID     \n                        FROM\n                            AKIN.TBL_LOAN_PAYMENT    \n                    )   \n                    AND    L.MANDEH_ASL > 0   \n                    AND    L.EFFDATE   = TO_DATE(RUN_DATE);   COMMIT;   \/*-------------------------------------*\/   \/*-----------------------------------*\/   \/*    COMMIT;*\/   \/*  LOC_F := SYSTIMESTAMP;*\/   \/*  --SAVING LOGs*\/   \/*  SELECT\n                        COUNT(*)*\/   \/*  \n                    INTO\n                        LOC_MEGHDAR*\/   \/*  \n                    FROM\n                        NEGASHT.TBL_TASHILAT_EMRUZ;*\/   \/*  HAMI.PRC_LOG('LOAN_CNT',\n                        LOC_MEGHDAR,\n                        USER,\n                        $$PLSQL_UNIT,\n                        $$PLSQL_LINE,\n                        NULL);*\/   \/*  SELECT\n                            COUNT(*)-LOC_MEGHDAR \n                        INTO\n                            LOC_MEGHDAR \n                        FROM\n                            DADEKAVAN_DAY.LOAN;*\/   \/*  HAMI.PRC_LOG('LOAN_IGN_CNT',\n                            LOC_MEGHDAR,\n                            USER,\n                            $$PLSQL_UNIT,\n                            $$PLSQL_LINE,\n                            NULL);*\/   \/*  HAMI.PRC_LOG('LOAN_TIME',\n                            HAMI.FNC_MODAT_EJRA(LOC_S,\n                            LOC_F),\n                            USER,\n                            $$PLSQL_UNIT,\n                            $$PLSQL_LINE,\n                            NULL);*\/   \/*EXCEPTION*\/   \/*\n                            WHEN OTHERS THEN*\/   \/*  RAISE;*\/ \n                        END PRC_TRANSFER_LOAN;","name":"PRC_TRANSFER_LOAN","digestSourceCode":"bc49e5d8d2173b2e7e5b35d0ea231a1219c4e698"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_DEPOSIT\" ( RUN_DATE IN DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel DEPOSIT     *\/  V_SEPORDE_TBL_NUMBER   NUMBER; \/*KODAM EMRUZ AST?*\/  LOC_S                  TIMESTAMP;  LOC_F                  TIMESTAMP;  LOC_MEGHDAR            NUMBER; \/*  v_trunc(run_date)           DATE ;*\/ BEGIN \/*  select\n        meghdar \n    into\n        v_trunc(run_date) \n    from\n        PAYESH.tbl_tanzimat_system \n    where\n        nam = 'trunc(run_date)' ;*\/   \/* v_seporde_tbl_number    := PAYESH.FNC_GET_SEPORDE_EMRUZ();*\/  EXECUTE IMMEDIATE 'truncate table akin.TBL_DEPOSIT';  LOC_S   := SYSTIMESTAMP;  INSERT     \/\n            *+   PARALLEL(auto) *\/ \n        INTO\n            AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,RATE  ,REF_BRANCH  ,REF_CUSTOMER  ,REF_DEPOSIT_ACCOUNTING  ,MODALITY_TYPE  ,REF_CURRENCY  ) (\n                SELECT\n                    CASE     \n                        WHEN T.SHOMARE_SEPORDE IS NOT NULL THEN TO_NUMBER(T.SHOMARE_SEPORDE)     \n                        ELSE 999999    \n                    END   AS SHOMARE_SEPORDE  ,\n                    T.TARIKH_EFTETAH  ,\n                    T.MOJUDI_SEPORDE  ,\n                    T.TARIKH_SARRESID  ,\n                    T.NOE_SEPORDE  ,\n                    CASE     \n                        WHEN ( T.NERKH + NVL(B.RATE,\n                        0) ) IS NOT NULL THEN T.NERKH + NVL(B.RATE,\n                        0)     \n                        ELSE 10    \n                    END   AS RATE  ,\n                    CASE     \n                        WHEN T.BR_CODE IS NOT NULL THEN TO_NUMBER(T.BR_CODE)     \n                        ELSE 99999    \n                    END   AS BR_CODE  ,\n                    CASE     \n                        WHEN T.CUST_NO IS NOT NULL THEN TO_NUMBER(T.CUST_NO)     \n                        ELSE 99999    \n                    END   AS CUST_NO  ,\n                    T.NOE_SEPORDE  ,\n                    T.TAFKIK_SEPORDE  ,\n                    CASE     \n                        WHEN T.ARZ IS NOT NULL THEN T.ARZ     \n                        ELSE 99999    \n                    END   AS ARZ  \n                FROM\n                    (    SELECT\n                        \/*+   PARALLEL(auto) *\/ DISTINCT     S.DEPNUM AS SHOMARE_SEPORDE    ,\n                        S.OPEN_DATE AS TARIKH_EFTETAH    ,\n                        S.BALANCE_ENDDAY AS MOJUDI_SEPORDE    ,\n                        S.FRZN_AMNT    ,\n                        S.STATE_ENDDAY    ,\n                        ADD_MONTHS(      S.RENEW_DATE     ,\n                        TS.VALIDITY_DURATION     ) AS TARIKH_SARRESID    ,\n                        SUBSTR(      S.PRODUCTTYPECOD     ,\n                        3     ,\n                        4     ) AS NOE_SEPORDE    ,\n                        A.CUR_ID AS ARZ    ,\n                        SS.RATE AS NERKH    ,\n                        SM.CUST_NO + 0 AS CUST_NO    ,\n                        S.BR_CODE + 10000 AS BR_CODE    ,\n                        TS.MODALITY_TYPE AS TAFKIK_SEPORDE    ,\n                        TS.VALIDITY_DURATION AS MODAT    \n                    FROM\n                        DADEKAVAN_DAY.SEPORDE_SOOD SS     \n                    LEFT OUTER JOIN\n                        DADEKAVAN_DAY.DEPOSIT S \n                            ON SUBSTR(       S.PRODUCTTYPECOD      ,\n                        3      ,\n                        4      ) = SUBSTR(       SS.DEPTYPECODE      ,\n                        3      ,\n                        4      )      \/*   \n                        AND S.STATE_ENDDAY              =0*\/     \n                        AND      S.EFFDATE   = TRUNC(RUN_DATE)     \n                    LEFT OUTER JOIN\n                        PRAGG.TBL_CURRENCY A \n                            ON S.CURR_COD   = A.SWIFT_CODE     \n                    LEFT OUTER JOIN\n                        DADEKAVAN_DAY.SEPORDE_MOSHTARI SM \n                            ON SM.DP_NO   = S.DEPNUM     \n                    LEFT OUTER JOIN\n                        TBL_MODALITY_TYPE TS \n                            ON TS.ID   = SUBSTR(      S.PRODUCTTYPECOD     ,\n                        3     ,\n                        4     )           \/*  \n                    left OUTER join\n                        DADEKAVAN_DAY.ETELAATE_MOSHTARI em           \n                            on           EM.C1001CUSTNUM  =SM.CUST_NO*\/    \n                    WHERE\n                        S.PRODUCTTYPECOD IS NOT NULL     \n                        AND      S.BALANCE_ENDDAY > 0   ) T   \n                LEFT OUTER JOIN\n                    (\n                        SELECT\n                            DISTINCT     DP_NO    ,\n                            FIRST_VALUE(      RATE     ) OVER(PARTITION \n                        BY\n                            DP_NO      \n                        ORDER BY\n                            BEGIN_DATE      DESC     ) AS RATE    \n                        FROM\n                            DADEKAVAN_DAY.SEPORDE_SOOD_TAVAFOGHI    \n                        WHERE\n                            BEGIN_DATE < TRUNC(RUN_DATE)   \n                    ) B \n                        ON T.SHOMARE_SEPORDE   = B.DP_NO  \n                    );   COMMIT;  INSERT     \/\n                        *+   PARALLEL(auto) *\/ \n                INTO\n                    AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,REF_CURRENCY  ,RATE  ,REF_CUSTOMER  ,MODALITY_TYPE  ,REF_BRANCH  ,REF_DEPOSIT_ACCOUNTING  ) (\n                        SELECT\n                            DISTINCT   T.DEPNUM  ,\n                            MAX(T.OPEN_DATE)  ,\n                            MAX(T.BALANCE_ENDDAY)  ,\n                            MAX(ADD_MONTHS(    T.RENEW_DATE   ,\n                            TS.VALIDITY_DURATION   ) )  ,\n                            MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                            3   ,\n                            4   ) )  ,\n                            CASE    \n                                WHEN MAX(A.CUR_ID) IS NOT NULL THEN MAX(A.CUR_ID)    \n                                ELSE 99999   \n                            END  ,\n                            MAX(    CASE     \n                                WHEN T.BALANCE_ENDDAY >= T.PELE_BASEAMOUNT THEN T.RATE     \n                                ELSE 0    \n                            END   )  ,\n                            CASE    \n                                WHEN MAX(SM.CUST_NO) IS NOT NULL THEN MAX(SM.CUST_NO) + 0    \n                                ELSE 99999   \n                            END  ,\n                            MAX(TS.MODALITY_TYPE)  ,\n                            CASE     \n                                WHEN MAX(T.BR_CODE) IS NOT NULL THEN TO_NUMBER(MAX(T.BR_CODE) )     \n                                ELSE 99999    \n                            END   AS BR_CODE  ,\n                            MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                            3   ,\n                            4   ) )  \n                        FROM\n                            (    SELECT\n                                SP.*    ,\n                                S.DEPOSITKEY    ,\n                                S.DEPNUM    ,\n                                S.BR_CODE + 10000 AS BR_CODE    ,\n                                S.BR_NAME    ,\n                                S.PRODUCTTYPECOD    ,\n                                S.BALANCE_ENDDAY    ,\n                                S.RENEW_DATE    ,\n                                S.CURR_COD    ,\n                                S.CURRENT_STATE    ,\n                                S.FRZN_AMNT    ,\n                                S.EFFDATE    ,\n                                S.STATE_ENDDAY    ,\n                                S.OPEN_DATE    \n                            FROM\n                                DADEKAVAN_DAY.SEPORDE_SOOD_PELEKANI SP     \n                            LEFT OUTER JOIN\n                                DADEKAVAN_DAY.DEPOSIT S \n                                    ON SUBSTR(      S.PRODUCTTYPECOD     ,\n                                3     ,\n                                4     ) = SUBSTR(      SP.DP_TYPE_CODE     ,\n                                3     ,\n                                4     )    \n                            WHERE\n                                S.BALANCE_ENDDAY >= SP.PELE_BASEAMOUNT     \n                                AND      S.BALANCE_ENDDAY > 0     \n                                AND      S.EFFDATE   = TRUNC(RUN_DATE)   ) T   \n                        LEFT OUTER JOIN\n                            PRAGG.TBL_CURRENCY A \n                                ON T.CURR_COD   = A.SWIFT_CODE   \n                        LEFT OUTER JOIN\n                            DADEKAVAN_DAY.SEPORDE_MOSHTARI SM \n                                ON SM.DP_NO   = T.DEPNUM   \n                        LEFT OUTER JOIN\n                            \/*  DADEKAVAN_DAY.ETELAATE_MOSHTARI em         \n                                on         EM.C1001CUSTNUM  =SM.CUST_NO         \n                        left outer join\n                            *\/ TBL_MODALITY_TYPE TS \n                                ON TS.ID   = SUBSTR(    T.PRODUCTTYPECOD   ,\n                            3   ,\n                            4   )  \n                        GROUP BY\n                            T.DEPNUM  );   COMMIT;  INSERT     \/\n                                *+   PARALLEL(auto) *\/ \n                            INTO\n                                AKIN.TBL_DEPOSIT (   DEP_ID  ,OPENING_DATE  ,BALANCE  ,DUE_DATE  ,REF_DEPOSIT_TYPE  ,REF_CURRENCY  ,RATE  ,REF_CUSTOMER  ,MODALITY_TYPE  ,REF_BRANCH  ,REF_DEPOSIT_ACCOUNTING  ) (\n                                    SELECT\n                                        DISTINCT   T.DEPNUM  ,\n                                        MAX(T.OPEN_DATE)  ,\n                                        ROUND(    MAX(T.BALANCE_ENDDAY)   ,\n                                        0   )  ,\n                                        MAX(ADD_MONTHS(    T.RENEW_DATE   ,\n                                        TS.VALIDITY_DURATION   ) )  ,\n                                        MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                                        3   ,\n                                        4   ) )  ,\n                                        CASE    \n                                            WHEN MAX(A.CUR_ID) IS NOT NULL THEN MAX(A.CUR_ID)    \n                                            ELSE 99999   \n                                        END  ,\n                                        MAX(0)  ,\n                                        CASE    \n                                            WHEN MAX(SM.CUST_NO) IS NOT NULL THEN MAX(SM.CUST_NO) + 0    \n                                            ELSE 99999   \n                                        END  ,\n                                        MAX(TS.MODALITY_TYPE)  ,\n                                        CASE     \n                                            WHEN MAX(T.BR_CODE) IS NOT NULL THEN MAX(T.BR_CODE) + 10000     \n                                            ELSE 99999    \n                                        END   AS BR_CODE  ,\n                                        MAX(SUBSTR(    T.PRODUCTTYPECOD   ,\n                                        3   ,\n                                        4   ) )  \n                                    FROM\n                                        DADEKAVAN_DAY.DEPOSIT T   \n                                    LEFT OUTER JOIN\n                                        PRAGG.TBL_CURRENCY A \n                                            ON T.CURR_COD   = A.SWIFT_CODE   \n                                    LEFT OUTER JOIN\n                                        DADEKAVAN_DAY.SEPORDE_MOSHTARI SM \n                                            ON SM.DP_NO   = T.DEPNUM   \n                                    LEFT OUTER JOIN\n                                        TBL_MODALITY_TYPE TS \n                                            ON TS.ID   = SUBSTR(    T.PRODUCTTYPECOD   ,\n                                        3   ,\n                                        4   )  \n                                    WHERE\n                                        TS.MODALITY_TYPE   = 2      \/* \n                                        AND t.STATE_ENDDAY          =0*\/   \n                                        AND    T.BALANCE_ENDDAY > 0   \n                                        AND    T.EFFDATE          = TRUNC(RUN_DATE)  \n                                    GROUP BY\n                                        T.DEPNUM  \n                                );   COMMIT; \/*  LOC_F := SYSTIMESTAMP;*\/ \/*  SELECT\n                                    COUNT(*) \n                                INTO\n                                    LOC_MEGHDAR \n                                FROM\n                                    NEGASHT.TBL_SEPORDE_EMRUZ;*\/ \/*  HAMI.PRC_LOG('DEP_CNT',\n                                    LOC_MEGHDAR,\n                                    USER,\n                                    $$PLSQL_UNIT,\n                                    $$PLSQL_LINE,\n                                    NULL);*\/ \/*  HAMI.PRC_LOG('DEP_TIME',\n                                    HAMI.FNC_MODAT_EJRA(LOC_S,\n                                    LOC_F),\n                                    USER,\n                                    $$PLSQL_UNIT,\n                                    $$PLSQL_LINE,\n                                    NULL);*\/ \/*  SELECT\n                                        COUNT(*)-LOC_MEGHDAR \n                                    INTO\n                                        LOC_MEGHDAR \n                                    FROM\n                                        DADEKAVAN_DAY.DEPOSIT;*\/ \/*  HAMI.PRC_LOG('DEP_IGN_CNT',\n                                        LOC_MEGHDAR,\n                                        USER,\n                                        $$PLSQL_UNIT,\n                                        $$PLSQL_LINE,\n                                        NULL);*\/ \/*  EXCEPTION *\/ \/*\n                                        WHEN OTHERS THEN*\/ \/*RAISE;*\/ \n                                    END PRC_TRANSFER_DEPOSIT;","name":"PRC_TRANSFER_DEPOSIT","digestSourceCode":"50d522a524746f82ea0031c532af824ab5e65569"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_J_TRANSFER_DEPOSIT_PROFIT\" ( RUN_DATE DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: ijad sode sepordeha be sorat tarikhi   *\/  EFF_DATE   DATE;  VAR        VARCHAR2(4000); BEGIN  EXECUTE IMMEDIATE 'ALTER SESSION FORCE PARALLEL DML';  EXECUTE IMMEDIATE 'truncate table akin.TBL_DEPOSIT_INTEREST_PAYMENT';  \/***  bar asas tarikh sarresid sepordeha zaman pardakht sod va mablagh sod pardakhti ra taeen mikonim  ***\/  INSERT \n    INTO\n        TBL_DEPOSIT_INTEREST_PAYMENT\n        ( REF_DEP_ID,DUE_DATE,PROFIT_AMOUNT ) WITH SEP AS (   SELECT\n            \/*+  PARALLEL(auto) *\/    ROUND(     MONTHS_BETWEEN(      E.DUE_DATE     ,\n            E.OPENING_DATE     )    ,\n            0    ) FASELE   ,\n            ROUND(     MONTHS_BETWEEN(SYSDATE,\n            E.OPENING_DATE)    ,\n            0    ) FASEL   ,\n            E.DEP_ID   ,\n            E.REF_CURRENCY   ,\n            E.REF_CUSTOMER   ,\n            E.REF_DEPOSIT_TYPE   ,\n            E.REF_BRANCH   ,\n            E.DUE_DATE   ,\n            E.OPENING_DATE   ,\n            ROUND( (E.BALANCE * E.RATE) \/ 1200) AS BED   ,\n            HS.LEDGER_CODE_PROFIT   ,\n            E.MODALITY_TYPE   \n        FROM\n            TBL_DEPOSIT E   ,\n            TBL_DEPOSIT_ACCOUNTING HS   \n        WHERE\n            HS.DEP_ACC_ID     = E.REF_DEPOSIT_ACCOUNTING    \n            AND     E.DUE_DATE >= RUN_DATE    \n            AND     E.MODALITY_TYPE   = 1    \n            AND     E.BALANCE <> 0  ),NUM AS (   SELECT\n            ROWNUM R   \n        FROM\n            DUAL   CONNECT \n        BY\n            ROWNUM <= 500  )\/*max FASELE MAHI EFF V \n    END*\/ SELECT\n        SEP.DEP_ID  ,\n        ADD_MONTHS(    SEP.OPENING_DATE   ,\n        NUM.R   )  ,\n        SEP.BED  \n    FROM\n        SEP  ,\n        NUM  \n    WHERE\n        NUM.R <= SEP.FASELE   \n        AND    NUM.R > SEP.FASEL;   COMMIT;      \/*===========================================================*\/ \/*===========================================================*\/ \n    END PRC_J_TRANSFER_DEPOSIT_PROFIT;","name":"PRC_J_TRANSFER_DEPOSIT_PROFIT","digestSourceCode":"2a4d6541280221482518430fac6eaee6eac00624"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_SHIVE_NEGASHT\" (     INPAR_COD_SARFASL     IN NUMBER ,     INPAR_YEK_MAH         IN NUMBER ,     INPAR_YEK_TA_SEMAH    IN NUMBER ,     INPAR_SEMAH_TA_YEKSAL IN NUMBER ,     INPAR_YEK_TA_5SAL     IN NUMBER ,     INPAR_BISHTAR_AZ_5SAL IN NUMBER ,     INPAR_BEDONE_JARIAN   IN NUMBER,     outpar out number) AS BEGIN   UPDATE\n        TBL_SHIVE_NEGASHT_IFRS   \n    SET\n        YEK_MAH       = nvl(INPAR_YEK_MAH,\n        0) ,\n        YEK_TA_SEMAH    = nvl(INPAR_YEK_TA_SEMAH ,\n        0),\n        SEMAH_TA_YEKSAL = nvl(INPAR_SEMAH_TA_YEKSAL,\n        0) ,\n        YEK_TA_5SAL     = nvl(INPAR_YEK_TA_5SAL,\n        0) ,\n        BISHTAR_AZ_5SAL = nvl(INPAR_BISHTAR_AZ_5SAL,\n        0) ,\n        BEDONE_JARIAN   = nvl(INPAR_BEDONE_JARIAN,\n        0)   \n    WHERE\n        REF_SARFASL =  INPAR_COD_SARFASL ;     COMMIT;      outpar:=1; \n    END PRC_SHIVE_NEGASHT;","name":"PRC_SHIVE_NEGASHT","digestSourceCode":"2f8138263c487b4d73ef2171aaba5f0ad4c9bff4"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_PAYMENT\" ( RUNDATE IN DATE )   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel aghsat    *\/ AS  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP;  LOC_MEGHDAR   NUMBER; BEGIN  EXECUTE IMMEDIATE 'truncate table akin.TBL_LOAN_PAYMENT';  LOC_S   := SYSTIMESTAMP;     \/*** asl ghest va sude ghest ra az jadavele bank khonde va be akin miriza***\/  INSERT     \/\n        *+ PARALLEL(AUTO) *\/ \n    INTO\n        AKIN.TBL_LOAN_PAYMENT (   REF_LON_ID  ,DUE_DATE  ,PROFIT_AMOUNT  ,AMOUNT  ) SELECT\n            P.ABRNCHCOD ||   P.LNMINORTP ||   P.CFCIFNO ||   P.CRSERIAL AS TASHILAT  ,\n            P.PAY_DATE PAY_DATE  ,\n            P.PAY_PROFIT PAY_PROFIT  ,\n            P.PAY_AMOUNT - P.PAY_PROFIT PAY_AMOUNT  \n        FROM\n            DADEKAVAN_DAY.PAYMENT P  \n        WHERE\n            P.PAY_AMOUNT - P.PAY_PROFIT > 0; \/**\/ \/*       LOC_F := SYSTIMESTAMP;*\/ \/*       LOC_MEGHDAR := SQL%ROWCOUNT;*\/ \/*       HAMI.PRC_LOG('PAY_CNT',LOC_MEGHDAR,USER,$$PLSQL_UNIT,$$PLSQL_LINE,NULL);*\/ \/*       HAMI.PRC_LOG('PAY_TIME',HAMI.FNC_MODAT_EJRA(LOC_S,LOC_F),USER,$$PLSQL_UNIT,$$PLSQL_LINE,NULL);*\/ \/*       SELECT\n                COUNT(*)-LOC_MEGHDAR \n            INTO\n                LOC_MEGHDAR \n            FROM\n                DADEKAVAN_DAY.PAYMENT;*\/ \/*       HAMI.PRC_LOG('PAY_IGN_CNT',\n                LOC_MEGHDAR,\n                USER,\n                $$PLSQL_UNIT,\n                $$PLSQL_LINE,\n                NULL);*\/ \/*       *\/ \/*EXCEPTION *\/ \/*\n                WHEN OTHERS THEN*\/ \/*RAISE;*\/  \n            END PRC_TRANSFER_PAYMENT;","name":"PRC_TRANSFER_PAYMENT","digestSourceCode":"3e89853919b104e93a267e901bc6eec44013b13e"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_DEPOSIT_PROFIT\" ( RUN_DATE DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: ijad sode sepordeha    *\/  EFF_DATE   DATE;  VAR        VARCHAR2(4000); BEGIN  EXECUTE IMMEDIATE 'ALTER SESSION FORCE PARALLEL DML';  EXECUTE IMMEDIATE 'truncate table akin.TBL_DEPOSIT_INTEREST_PAYMENT';   \/***  bar asas tarikh sarresid sepordeha zaman pardakht sod va mablagh sod pardakhti ra taeen mikonim  ***\/  INSERT \n    INTO\n        TBL_DEPOSIT_INTEREST_PAYMENT\n        ( REF_DEP_ID,DUE_DATE,PROFIT_AMOUNT ) WITH SEP AS (   SELECT\n            \/*+  PARALLEL(auto) *\/    ROUND(     MONTHS_BETWEEN(      E.DUE_DATE     ,\n            E.OPENING_DATE     )    ,\n            0    ) FASELE   ,\n            ROUND(     MONTHS_BETWEEN(SYSDATE,\n            E.OPENING_DATE)    ,\n            0    ) FASEL   ,\n            E.DEP_ID   ,\n            E.REF_CURRENCY   ,\n            E.REF_CUSTOMER   ,\n            E.REF_DEPOSIT_TYPE   ,\n            E.REF_BRANCH   ,\n            E.DUE_DATE   ,\n            E.OPENING_DATE   ,\n            ROUND( (E.BALANCE * E.RATE) \/ 1200) AS BED   ,\n            HS.LEDGER_CODE_PROFIT   ,\n            E.MODALITY_TYPE   \n        FROM\n            TBL_DEPOSIT E   ,\n            TBL_DEPOSIT_ACCOUNTING HS   \n        WHERE\n            HS.DEP_ACC_ID     = E.REF_DEPOSIT_ACCOUNTING    \n            AND     E.DUE_DATE >= RUN_DATE    \n            AND     E.MODALITY_TYPE   = 1    \n            AND     E.BALANCE <> 0  ),NUM AS (   SELECT\n            ROWNUM R   \n        FROM\n            DUAL   CONNECT \n        BY\n            ROWNUM <= 500  )\/*max FASELE MAHI EFF V \n    END*\/ SELECT\n        SEP.DEP_ID  ,\n        ADD_MONTHS(    SEP.OPENING_DATE   ,\n        NUM.R   )  ,\n        SEP.BED  \n    FROM\n        SEP  ,\n        NUM  \n    WHERE\n        NUM.R <= SEP.FASELE   \n        AND    NUM.R > SEP.FASEL;   COMMIT;      \/*===========================================================*\/ \/*===========================================================*\/ \n    END PRC_TRANSFER_DEPOSIT_PROFIT;","name":"PRC_TRANSFER_DEPOSIT_PROFIT","digestSourceCode":"8ecd8740af5fcab2d48f7fc7b80ca1f9578566fa"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_TRANSFER_MODALITY_TYPE\"  as begin EXECUTE IMMEDIATE 'truncate table TBL_MODALITY_TYPE'; INSERT \n    INTO\n        TBL_MODALITY_TYPE\n        (     id,     name,     validity_duration,     modality_type   ) SELECT\n            id,\n            onvan,\n            modat,\n            CASE     \n                WHEN tafkik=2     \n                AND onvan LIKE '%قرض%'     THEN 2     \n                WHEN tafkik=2     \n                AND onvan NOT LIKE '%قرض%'     THEN 3     \n                ELSE 1   \n            END AS tafkik \n        FROM\n            (SELECT\n                id,\n                onvan,\n                modat,\n                CASE       \n                    WHEN modat =0       THEN 2       \n                    ELSE 1     \n                END AS tafkik   \n            FROM\n                (SELECT\n                    DISTINCT SUBSTR( DP_TYPE_CODE,\n                    3,\n                    4) AS id,\n                    TITLE                                    AS onvan,\n                    CASE         \n                        WHEN (           CASE             \n                            WHEN DEPTMTYP =2             THEN DEPTM*12             \n                            ELSE DEPTM           \n                        END) >100         THEN 0         \n                        ELSE (           CASE             \n                            WHEN DEPTMTYP =2             THEN DEPTM*12             \n                            ELSE DEPTM           \n                        END)       \n                    END AS modat     \n                FROM\n                    DADEKAVAN_DAY.NOE_SEPORDE     )   ) ;   COMMIT;   UPDATE\n                    TBL_MODALITY_TYPE \n                SET\n                    modality_type                        =2 \n                WHERE\n                    id in (\n                        1003, 1004, 1005, 1006, 1007\n                    );    end;","name":"PRC_TRANSFER_MODALITY_TYPE","digestSourceCode":"1d59d03596d3a3c624a070e9f1976f15c8d5684e"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_J_TRANSFER_LOAN\" ( RUN_DATE IN DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel loan be sorate tarikhi   *\/  LOC_MEGHDAR   NUMBER;  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP; BEGIN  EXECUTE IMMEDIATE 'truncate table tbl_loan';  LOC_S   := SYSTIMESTAMP;    \/*** bar asas sharayeti bayad tashilat dashte bashand , tashilat morde taeed bank ra montaghel mikonim ***\/  INSERT     \/\n        *+   PARALLEL(auto) *\/ \n    INTO\n        TBL_LOAN (   LON_ID  ,REF_LOAN_TYPE  ,REF_BRANCH  ,OPENING_DATE  ,APPROVED_AMOUNT  ,REF_CUSTOMER  ,REF_CURRENCY  ,REF_LOAN_ACCOUNTING  ,RATE  ,CURRENT_AMOUNT  ,OVERDUE_AMOUNT  ,DEFERRED_AMOUNT  ,DOUBTFUL_AMOUNT  ) SELECT\n            \/*+   PARALLEL(auto) *\/   L.ABRNCHCOD ||   L.LNMINORTP ||   L.CFCIFNO ||   L.CRSERIAL  ,\n            L.LNMINORTP  ,\n            L.ABRNCHCOD + 10000  ,\n            L.CRBGNDT  ,\n            L.CRACCLIM  ,\n            L.CFCIFNO  ,\n            CASE     \n                WHEN A.CUR_ID IS NOT NULL THEN A.CUR_ID     \n                ELSE 99999    \n            END   AS ID  ,\n            SUBSTR(    L.PRODUCTTYPECODE   ,\n            3   ,\n            4   )  ,\n            L.PRMAINRT  ,\n            L.MANDEH_ASL  ,\n            L.MANDEH_SARRESIDGOZASHTE  ,\n            L.MANDEH_MOAVAGH  ,\n            L.MANDEH_MASHKOOK  \n        FROM\n            ARCHIVE_RAW_BANK_DATA.LOAN@AKIN_TO_ARCHIVE L   \n        LEFT OUTER JOIN\n            PRAGG.TBL_CURRENCY A \n                ON A.SWIFT_CODE   = L.ACURRCODE  \n        WHERE\n            SUBSTR(     L.PRODUCTTYPECODE    ,0    ,3    ) <> 'L31'   \n            AND    L.EFFDATE   = RUN_DATE   \n            AND    L.STATE_ENDDAY = ANY (\n                '5','4','F','3'    \n            );   COMMIT;   \/***  baraye tashilati ke dar jadval aghsat ghesti nadarand yek ghest ba meghdar sefr vared mikonim  ***\/   INSERT \n            INTO\n                TBL_LOAN_PAYMENT\n                (   REF_LON_ID  ,PAYMENT_NUMBER  ,AMOUNT  ,PROFIT_AMOUNT  ,DUE_DATE  ) SELECT\n                    L.ABRNCHCOD ||   L.LNMINORTP ||   L.CFCIFNO ||   L.CRSERIAL  ,\n                    ''  ,\n                    L.MANDEH_ASL  ,\n                    ROUND(    L.MANDEH_ASL * (     CASE      \n                        WHEN PRMAINRT IS NULL THEN NERKH_KARMOZD      \n                        ELSE PRMAINRT     \n                    END    \/ 100)   ,\n                    0   )  ,\n                    CRENDDT  \n                FROM\n                    ARCHIVE_RAW_BANK_DATA.LOAN@AKIN_TO_ARCHIVE L  \n                WHERE\n                    L.ABRNCHCOD || L.LNMINORTP || L.CFCIFNO || L.CRSERIAL NOT IN (\n                        SELECT\n                            AKIN.TBL_LOAN_PAYMENT.REF_LON_ID     \n                        FROM\n                            AKIN.TBL_LOAN_PAYMENT    \n                    )   \n                    AND    L.MANDEH_ASL > 0   \n                    AND    L.EFFDATE   = TO_DATE(RUN_DATE);   COMMIT;   \/*-------------------------------------*\/   \/*-----------------------------------*\/   \/*    COMMIT;*\/   \/*  LOC_F := SYSTIMESTAMP;*\/   \/*  --SAVING LOGs*\/   \/*  SELECT\n                        COUNT(*)*\/   \/*  \n                    INTO\n                        LOC_MEGHDAR*\/   \/*  \n                    FROM\n                        NEGASHT.TBL_TASHILAT_EMRUZ;*\/   \/*  HAMI.PRC_LOG('LOAN_CNT',\n                        LOC_MEGHDAR,\n                        USER,\n                        $$PLSQL_UNIT,\n                        $$PLSQL_LINE,\n                        NULL);*\/   \/*  SELECT\n                            COUNT(*)-LOC_MEGHDAR \n                        INTO\n                            LOC_MEGHDAR \n                        FROM\n                            archive_raw_bank_data.LOAN;*\/   \/*  HAMI.PRC_LOG('LOAN_IGN_CNT',\n                            LOC_MEGHDAR,\n                            USER,\n                            $$PLSQL_UNIT,\n                            $$PLSQL_LINE,\n                            NULL);*\/   \/*  HAMI.PRC_LOG('LOAN_TIME',\n                            HAMI.FNC_MODAT_EJRA(LOC_S,\n                            LOC_F),\n                            USER,\n                            $$PLSQL_UNIT,\n                            $$PLSQL_LINE,\n                            NULL);*\/   \/*EXCEPTION*\/   \/*\n                            WHEN OTHERS THEN*\/   \/*  RAISE;*\/ \n                        END PRC_J_TRANSFER_LOAN;","name":"PRC_J_TRANSFER_LOAN","digestSourceCode":"7a7acbf42488226c966c16bad7611a7f449d5a18"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_SYSTEM_DATA_TEST\" AS  var_count number; BEGIN   select\n        count(*) \n    into\n        var_count \n    from\n        TBL_DEPOSIT; DBMS_OUTPUT.PUT_LINE(' tedade seporde ha : '||var_count); select\n            count(*) \n        into\n            var_count \n        from\n            TBL_LOAN; DBMS_OUTPUT.PUT_LINE(' tedade tashilat : '||var_count); select\n                count(*) \n            into\n                var_count \n            from\n                TBL_LOAN_ACCOUNTING; DBMS_OUTPUT.PUT_LINE(' tedade hesabdari tashilat : '||var_count); select\n                    count(*) \n                into\n                    var_count \n                from\n                    TBL_DEPOSIT_ACCOUNTING; DBMS_OUTPUT.PUT_LINE(' tedade hesabdari seporde : '||var_count); select\n                        count(*) \n                    into\n                        var_count \n                    from\n                        TBL_DEPOSIT \n                    where\n                        REF_DEPOSIT_ACCOUNTING not in (\n                            select\n                                TBL_DEPOSIT_ACCOUNTING.DEP_ACC_ID \n                            from\n                                TBL_DEPOSIT_ACCOUNTING\n                        ); DBMS_OUTPUT.PUT_LINE(' tedade seporde ha ke dar hesabdari nistand : '||var_count ); select\n                            count(*) \n                        into\n                            var_count \n                        from\n                            TBL_loan \n                        where\n                            REF_loan_ACCOUNTING not in (\n                                select\n                                    TBL_LOAN_ACCOUNTING.LON_ACC_ID \n                                from\n                                    TBL_loan_ACCOUNTING\n                            ); DBMS_OUTPUT.PUT_LINE(' tedade tashilat ha ke dar hesabdari nistand : '||var_count); select\n                                count(*) \n                            into\n                                var_count \n                            from\n                                TBL_LOAn \n                            where\n                                LON_ID not in (\n                                    select\n                                        distinct REF_LON_ID \n                                    from\n                                        TBL_LOAN_PAYMENT\n                                ); DBMS_OUTPUT.PUT_LINE(' tedade tashilat ha ke dar aghsat nistand : '||var_count );   \n                            END PRC_SYSTEM_DATA_TEST;","name":"PRC_SYSTEM_DATA_TEST","digestSourceCode":"d259eea54794c9f62ff8403e4d110bc909f28ead"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_J_TRANSFER_ACCOUNTING\" ( RUN_DATE IN DATE ) AS   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel hesabdari be sorate tarikhi   *\/  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP;  LOC_MEGHDAR   NUMBER; BEGIN  \/****  az jadval  SEPORDE_DAFTAR_KOL bar asas nahveie ke bank gofte har noe seporde be yek code sarfasl sod va yek code sarfasl asl negasht mishavad ****\/  EXECUTE IMMEDIATE 'truncate table  akin.TBL_DEPOSIT_ACCOUNTING';  LOC_S         := SYSTIMESTAMP;  INSERT \n    INTO\n        AKIN.TBL_DEPOSIT_ACCOUNTING\n        \/*- hesabdari SEPORDE*\/   (\n            SELECT\n                *  \n            FROM\n                (    SELECT\n                    SUBSTR(DP_TYPE_CODE,\n                    3,\n                    4) AS REF_SEPORDE    ,\n                    TO_CHAR(REL_TYPE) AS S    ,\n                    GLCODE    \n                FROM\n                    ARCHIVE_RAW_BANK_DATA.SEPORDE_DAFTAR_KOL@AKIN_TO_ARCHIVE    \n                WHERE\n                    EFFDATE   = TRUNC(RUN_DATE)   )    PIVOT ( SUM ( GLCODE )     FOR S     IN ( 'حساب اصلي' AS ASL,\n                'حساب سود علي الحساب' AS SUD )    )  \n            WHERE\n                ASL IS NOT NULL  \n            );    \/*----------------------------------------------------------------*\/ \/****  az jadval  TASHILAT_DAFTAR_KOL bar asas nahveie ke bank gofte har noe TASHILAT be yek code sarfasl sod va yek code sarfasl asl negasht mishavad ****\/   EXECUTE IMMEDIATE 'truncate table  akin.TBL_LOAN_ACCOUNTING';  LOC_S         := SYSTIMESTAMP;  INSERT \n            INTO\n                AKIN.TBL_LOAN_ACCOUNTING\n                \/*-HESABDARI_TASHILAT*\/   (\n                    SELECT\n                        *  \n                    FROM\n                        (    SELECT\n                            SUBSTR(DP_TYPE_CODE,\n                            3,\n                            4) AS REF_TASHILAT    ,\n                            TO_CHAR(REL_TYPE) AS S    ,\n                            GLCODE    \n                        FROM\n                            ARCHIVE_RAW_BANK_DATA.TASHILAT_DAFTAR_KOL@AKIN_TO_ARCHIVE    \n                        WHERE\n                            SUBSTR(DP_TYPE_CODE,0,3) = 'L33'     \n                            AND      EFFDATE   = TRUNC(RUN_DATE)   )    PIVOT ( MAX ( GLCODE )     FOR S     IN ( 'اصلي' AS ASL,\n                        'سود قطعي' AS SUD )    )  \n                    WHERE\n                        ASL IS NOT NULL  \n                    ) \n                UNION\n                (\n                    SELECT\n                        *  \n                    FROM\n                        (    SELECT\n                            SUBSTR(DP_TYPE_CODE,\n                            3,\n                            4) AS REF_TASHILAT    ,\n                            TO_CHAR(REL_TYPE) AS S    ,\n                            GLCODE    \n                        FROM\n                            ARCHIVE_RAW_BANK_DATA.TASHILAT_DAFTAR_KOL@AKIN_TO_ARCHIVE    \n                        WHERE\n                            SUBSTR(DP_TYPE_CODE,0,3) = 'L34'     \n                            AND      EFFDATE   = TRUNC(RUN_DATE)   )    PIVOT ( MAX ( GLCODE )     FOR S     IN ( 'اصلي' AS ASL,\n                        'سود قطعي' AS SUD )    )  \n                    WHERE\n                        ASL IS NOT NULL  \n                    ) \n                UNION\n                (\n                    SELECT\n                        *  \n                    FROM\n                        (    SELECT\n                            SUBSTR(DP_TYPE_CODE,\n                            3,\n                            4) AS REF_TASHILAT    ,\n                            TO_CHAR(REL_TYPE) AS S    ,\n                            GLCODE    \n                        FROM\n                            ARCHIVE_RAW_BANK_DATA.TASHILAT_DAFTAR_KOL@AKIN_TO_ARCHIVE    \n                        WHERE\n                            SUBSTR(DP_TYPE_CODE,0,3) = 'L36'   )    PIVOT ( MAX ( GLCODE )     FOR S     IN ( 'اصلي' AS ASL,\n                        'سود قطعي' AS SUD )    )  \n                    WHERE\n                        ASL IS NOT NULL  \n                    );   COMMIT;  INSERT \n                    INTO\n                        AKIN.TBL_LOAN_ACCOUNTING\n                        ( SELECT\n                            REF_TASHILAT  ,\n                            ASL  ,\n                            CASE     \n                                WHEN SUD IS NULL THEN SUD1     \n                                ELSE SUD    \n                            END   AS SUD  \n                        FROM\n                            (    SELECT\n                                SUBSTR(DP_TYPE_CODE,\n                                3,\n                                4) AS REF_TASHILAT    ,\n                                TO_CHAR(REL_TYPE) AS S    ,\n                                GLCODE    \n                            FROM\n                                ARCHIVE_RAW_BANK_DATA.TASHILAT_DAFTAR_KOL@AKIN_TO_ARCHIVE    \n                            WHERE\n                                SUBSTR(DP_TYPE_CODE,0,3) = 'L32' \/* \n                                or substr(DP_TYPE_CODE,0,3) ='L33' *\/   )    PIVOT ( MAX ( GLCODE )     FOR S     IN ( 'اصلي' AS ASL,\n                            'کارمزد' AS SUD,\n                            'کارمزد دريافتي' AS SUD1 )    )  \n                        WHERE\n                            ASL IS NOT NULL  );  -- LOC_F         := SYSTIMESTAMP; -- LOC_MEGHDAR   := SQL%ROWCOUNT; -- HAMI.PRC_LOG( --  'LOAN_ACC_CNT' -- ,LOC_MEGHDAR -- ,USER -- ,$$PLSQL_UNIT -- ,$$PLSQL_LINE -- ,NULL -- ); -- HAMI.PRC_LOG( --  'LOAN_ACC_TIME' -- ,HAMI.FNC_MODAT_EJRA(LOC_S,LOC_F) -- ,USER -- ,$$PLSQL_UNIT -- ,$$PLSQL_LINE -- ,NULL -- );  EXCEPTION  \n                            WHEN OTHERS THEN   RAISE; \n                        END PRC_J_TRANSFER_ACCOUNTING;","name":"PRC_J_TRANSFER_ACCOUNTING","digestSourceCode":"157a4ac852916b78f32e6c0bb60efba769b9aaa9"},{"sourceCode":"\n    CREATE \n    OR REPLACE PROCEDURE \"AKIN\".\"PRC_J_TRANSFER_PAYMENT\" ( RUNDATE IN DATE )   \/*   Programmer Name: morteza sahi   Release Date\/Time:1396\/05\/12-10:00   Version:   Category:    Description: enteghal be jadavel aghsat be sorate tarikhi   *\/ AS  LOC_S         TIMESTAMP;  LOC_F         TIMESTAMP;  LOC_MEGHDAR   NUMBER; BEGIN  EXECUTE IMMEDIATE 'truncate table akin.TBL_LOAN_PAYMENT';  LOC_S   := SYSTIMESTAMP;      \/*** asl ghest va sude ghest ra az jadavele archive khonde va be akin miriza***\/   INSERT     \/\n        *+ PARALLEL(AUTO) *\/ \n    INTO\n        AKIN.TBL_LOAN_PAYMENT (   REF_LON_ID  ,DUE_DATE  ,PROFIT_AMOUNT  ,AMOUNT  ) SELECT\n            P.ABRNCHCOD ||   P.LNMINORTP ||   P.CFCIFNO ||   P.CRSERIAL AS TASHILAT  ,\n            P.PAY_DATE PAY_DATE  ,\n            P.PAY_PROFIT PAY_PROFIT  ,\n            P.PAY_AMOUNT - P.PAY_PROFIT PAY_AMOUNT  \n        FROM\n            ARCHIVE_RAW_BANK_DATA.PAYMENT@AKIN_TO_ARCHIVE P  \n        WHERE\n            P.PAY_AMOUNT - P.PAY_PROFIT > 0   \n            AND    EFFDATE   = TRUNC(RUNDATE); \/**\/ \/*       LOC_F := SYSTIMESTAMP;*\/ \/*       LOC_MEGHDAR := SQL%ROWCOUNT;*\/ \/*       HAMI.PRC_LOG('PAY_CNT',LOC_MEGHDAR,USER,$$PLSQL_UNIT,$$PLSQL_LINE,NULL);*\/ \/*       HAMI.PRC_LOG('PAY_TIME',HAMI.FNC_MODAT_EJRA(LOC_S,LOC_F),USER,$$PLSQL_UNIT,$$PLSQL_LINE,NULL);*\/ \/*       SELECT\n                COUNT(*)-LOC_MEGHDAR \n            INTO\n                LOC_MEGHDAR \n            FROM\n                archive_raw_bank_data.PAYMENT;*\/ \/*       HAMI.PRC_LOG('PAY_IGN_CNT',\n                LOC_MEGHDAR,\n                USER,\n                $$PLSQL_UNIT,\n                $$PLSQL_LINE,\n                NULL);*\/ \/*       *\/ \/*EXCEPTION *\/ \/*\n                WHEN OTHERS THEN*\/ \/*RAISE;*\/  \n            END PRC_J_TRANSFER_PAYMENT;","name":"PRC_J_TRANSFER_PAYMENT","digestSourceCode":"c3df7eac87dbe1fe39e0d5e573cd5fa0fa2a733a"}]}
